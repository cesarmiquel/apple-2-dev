!cpu 6502

           *= $2000 ; ORG = $2000

; =====================================
; PAGE ZERO
MV_SRC_ST_LO   = $3c
MV_SRC_ST_HI   = $3d
MV_SRC_END_LO  = $3e
MV_SRC_END_HI  = $3f
MV_DST_ST_LO   = $42
MV_DST_ST_HI   = $43

            sta $C050           ; Lowres gfx
            sta $C053           ; Mixed mode
            sta $C05e           ; Enable 80col
            sta $c00d
            sta $c001

            jsr $c300           ; Init 80col display (pr#3)
            jsr $f836           ; clear gr screen
            sta $c055           ; switch to page 1x
            jsr $f836           ; clear gr screen

;
; Generate scroll at addtess $3000
;

.generatescroll

;            lda #$00        ; setup destination for copy
;            sta MV_DST_ST_LO
;            lda #$30
;            sta MV_DST_ST_HI

            ldx #18
-
            txa
            jsr $f847       ; Calculate offset to y cord. LO in accumulator ($26). HI in $27
            sta .snipet1start+1
            sta .snipet1start+20
            lda $27
            sta .snipet1start+2
            sta .snipet1start+21
            txa
            adc #1
            jsr $f847       ; Calculate offset to y cord. LO in accumulator ($26). HI in $27
            sta .snipet1start+9
            sta .snipet1start+12
            lda $27
            sta .snipet1start+10
            sta .snipet1start+13

            lda #<.snipet1start
            sta MV_SRC_ST_LO
            lda #>.snipet1start
            sta MV_SRC_ST_HI
            sta MV_SRC_END_HI         ; We don't cross page boundries
            lda #<.snipet1end-1
            sta MV_SRC_END_LO
            ldy #0
            sty MV_DST_ST_LO         ; save by re-using
            jsr $fe2c       ; Copy block

+
            dex
            bpl -
            lda #$60        ; write an RTS at the end of the uode
            sta $31a2

.start
            ldx #10
-           lda TEXT,x
.blit       sta $750 + 25
            dec .blit+1
            dex
            bpl -

            lda #$ff
            jsr .draw
            sta $c054           ; switch to page 1x

;            lda #$40           ; green
            lda #$30            ; violet
            sta MV_DST_ST_HI    ; To be used later. Can't change $30 above. This is the HI byte of the
                                ; address where the scroll routine will be written to: $3000.
;            lda #$d0           ; yellow
            jsr .draw

-
            ldx #14
            jsr .scrolldown     ; scroll 4ever
            ldx #19
            jsr .scrolldown     ; scroll 4ever
            ldx #24
            jsr .scrolldown     ; scroll 4ever
            ldx #30
            jsr .scrolldown     ; scroll 4ever
            ldx #30
            jsr .scrolldown     ; scroll 4ever
            sta $c055           ; switch to page 1x
            ldx #30
            jsr .scrolldown     ; scroll 4ever
            sta $c054           ; switch to page 1x
            bne -
    
.draw
            ldx #29
.loop
            sta $600,x
            sta $680,x
            sta $700,x
            sta $780,x
            dex
            cpx #9
            bne .loop
            rts

.scrolldown

-
			lda $5d0,x
            pha ; Save value at bottom to wrap around
            asl
            asl
            asl
            asl
            sta $5d0,x

            jsr $3000
; Top row
            pla ; Restora value from bottom of screen
            lsr
            lsr
            lsr
            lsr
            ora $400,x
            sta $400,x

			dex
            cpx #10
            bpl -
+
            rts

!convtab "a2txt.bin" {
TEXT       !Text "e.i.g.h.t.y"
}



.snipet1start
            lda $550,x              ; y
            pha
            lsr
            lsr
            lsr
            lsr
            ora $5d0,x              ; y+1
            sta $5d0,x              ; y+1
            pla
            asl
            asl
            asl
            asl
            sta $550,x              ; y
.snipet1end

;
; Begin scroll code that will be generated by .generatescroll routine. This will
; be stored in $3000.
;
;            lda $550,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $5d0,x
;            sta $5d0,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $550,x
;            lda $4d0,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $550,x
;            sta $550,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $4d0,x
;            lda $450,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $4d0,x
;            sta $4d0,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $450,x
;            lda $7a8,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $450,x
;            sta $450,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $7a8,x
;            lda $728,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $7a8,x
;            sta $7a8,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $728,x
;            lda $6a8,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $728,x
;            sta $728,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $6a8,x
;            lda $628,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $6a8,x
;            sta $6a8,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $628,x
;            lda $5a8,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $628,x
;            sta $628,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $5a8,x
;            lda $528,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $5a8,x
;            sta $5a8,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $528,x
;            lda $4a8,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $528,x
;            sta $528,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $4a8,x
;            lda $428,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $4a8,x
;            sta $4a8,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $428,x
;            lda $780,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $428,x
;            sta $428,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $780,x
;            lda $700,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $780,x
;            sta $780,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $700,x
;            lda $680,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $700,x
;            sta $700,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $680,x
;            lda $600,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $680,x
;            sta $680,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $600,x
;            lda $580,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $600,x
;            sta $600,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $580,x
;            lda $500,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $580,x
;            sta $580,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $500,x
;            lda $480,x
;            pha
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $500,x
;            sta $500,x
;            pla
;            asl
;            asl
;            asl
;            asl
;            sta $480,x
;
;            lda $400,x
;            lsr
;            lsr
;            lsr
;            lsr
;            ora $480,x
;            sta $480,x
;
;			lda $400,x
;			asl
;			asl
;			asl
;			asl
;			sta $400,x

; end scroll code

